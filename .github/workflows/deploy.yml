name: redis sample deployment
on:
  push:
    branches:
      - master
env:
  SPRING_PROFILE: action


jobs:
  build:
    environment: dev
    runs-on: ubuntu-latest

    env:
      HOST_REDIS: ${{ secrets.HOST_REDIS }}

    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379

    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '11'
          cache: maven
      - name: Output Information
        run: echo "host for redis ${{ env.HOST_REDIS }}"
      - name: Build with maven
        run: mvn clean package -Dspring-boot.run.profiles=${SPRING_PROFILE}
      - name: list files
        run: ls target/**

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: spring-data-redis-artifact
          path: |
            target/spring-data-redis-example-1.0.jar
            Dockerfile
          overwrite: 'true'
          retention-days: 7

  push-image:
    needs: build
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Get build artifact
        uses: actions/download-artifact@v4
        with:
          name: spring-data-redis-artifact
      - name: Output contents
        run: ls
      - name: build Image
        run: docker build -t spring-data-redis:1.0 .
      - name: login
        run: |
          echo "logging in..."
          echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
      - name: push image
        run: docker image push spring-data-redis:1.0


